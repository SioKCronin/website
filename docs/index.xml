<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Siobhán K Cronin</title>
    <link>https://siobhankcronin.com/</link>
    <description>Recent content on Siobhán K Cronin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 25 May 2019 11:53:47 -0700</lastBuildDate>
    
	<atom:link href="https://siobhankcronin.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://siobhankcronin.com/speaking/</link>
      <pubDate>Sat, 25 May 2019 11:53:47 -0700</pubDate>
      
      <guid>https://siobhankcronin.com/speaking/</guid>
      <description>Upcoming  6.12.2019 &amp;mdash; Empowering Business Owners with dbt @ Grove Collaborative (SF)  Past  10.11.2017 &amp;mdash; Step by Step @ Metis (SF) 9.21.2016 &amp;mdash; Forms @ Conference on Complex Systems (Amsterdam) 8.9.2016 &amp;mdash; Form and Movement in Complex Systems @ PyLadies (SF) 6.4.2016 &amp;mdash; On People, Cubes and Snacks @ AlterConf (SF)  
The Poetics of Swarms Swarm intelligence is the collective behavior of decentralized, self-organized systems.</description>
    </item>
    
    <item>
      <title>A growing neural gas network learns toplogies</title>
      <link>https://siobhankcronin.com/posts/neural_gas_learns_topologies/</link>
      <pubDate>Sun, 14 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/posts/neural_gas_learns_topologies/</guid>
      <description>A growing neural gas network learns topologies by Bernd Fritzke (1995).
Overview Hebbian learning variations for learning topologies in high-dimensional data.
Key concepts  topological learning: Given some high-dimensional data distributionp, find a topological structure which closely reflects the topology of the data distribution.
 competitive Hebbian leanring (CHL): For each input signal x connect the two closest centers (measured by Euclidean distance) by an edge.
 vector quantization (VC): Often used for data compression, quantization involves dividing a large set of points (vectors) into groups having approximatley the same number of points closest to them.</description>
    </item>
    
    <item>
      <title>Strategies and Principles of Distributed ML on Big Data (REVIEW)</title>
      <link>https://siobhankcronin.com/posts/distributed_ml/</link>
      <pubDate>Fri, 05 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/posts/distributed_ml/</guid>
      <description>The central question this paper asks is &amp;ldquo;how should we distribute our ML programs over a cluster?&amp;ldquo;. For some of us, the answer is &amp;ldquo;Spark&amp;rdquo;, and we call it a day. But if we aren&amp;rsquo;t satisified with the current state of performance, and would like to, instead, lean into the performance edge between ML models and systems, and explore the possibilities of improved performance, then we need to dig a little further.</description>
    </item>
    
    <item>
      <title>DeepLog: Anomaly Detection and Diagnosis from System Logs through Deep Learning</title>
      <link>https://siobhankcronin.com/posts/deeplog/</link>
      <pubDate>Mon, 16 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/posts/deeplog/</guid>
      <description>DeepLog: Anomaly Detection and Diagnosis from System Logs through Deep Learning by Min Du, Feifei Li, Guineng Zheng, &amp;amp; Vivek Srikumar (2017).
Overview Inspired by natural language modeling, the authors present a deep learning approach to anomaly detection in system logs.
Key concepts  system logs: A file that records the system states and significant events for debugging software. syslog: The system log standard maintained by Internet Engineering Task Force (IETF).</description>
    </item>
    
    <item>
      <title></title>
      <link>https://siobhankcronin.com/about/</link>
      <pubDate>Tue, 24 Apr 2018 11:53:47 -0700</pubDate>
      
      <guid>https://siobhankcronin.com/about/</guid>
      <description>Siobhán is a data engineer with a passion for scalable infrastructure, machine learning and collective intelligence.
She began her career researching how humans learn at Harvard&amp;rsquo;s Lab for Developmental Studies and Harvard Medical School, and now develops tools to help machines and humans collaborate together. She is the Data Engineering Lead at Landed, where she helps support the financial well-being of essential professionals.
Siobhán has published research in Brain &amp;amp; Cognition, Neuroreport, and Model View Culture, and presented at the Conference on Complex Systems, Conference on Cognitive Neuroscience, AlterConf, PyLadies, Metis, and Temple University.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://siobhankcronin.com/praxis/</link>
      <pubDate>Tue, 24 Apr 2018 11:53:47 -0700</pubDate>
      
      <guid>https://siobhankcronin.com/praxis/</guid>
      <description>(Anna Halprin&amp;rsquo;s deck with Maria Blaisse&amp;rsquo;s forms. Photo by Carolyn Strauss)</description>
    </item>
    
    <item>
      <title>Alignment for Advanced ML Systems (REVIEW)</title>
      <link>https://siobhankcronin.com/posts/miri_alignment/</link>
      <pubDate>Thu, 29 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/posts/miri_alignment/</guid>
      <description>Jessica Taylor, Eliezer Yudkowsky, Patrick LaVictoire, and Andrew Critch. Machine Intelligence Research Institute. Alignment in this context means making sure agents arrive at and optimize objective functions that are in the spirit of what was intended; that is that goals are reached while making sure no one gets hurt. One of the key takeaways from this overview is that our solutions must scale with intelligence, so for any new discovery, how long will it &amp;ldquo;hold&amp;rdquo; in lock step with advances in intelligence?</description>
    </item>
    
    <item>
      <title>ADAM: A Method for Stochastic Optimization (REVIEW)</title>
      <link>https://siobhankcronin.com/posts/adam/</link>
      <pubDate>Thu, 25 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/posts/adam/</guid>
      <description> Adam: A Method for Stochastic Optimization (2015). Diederik P. Kingma and Jimmy Lei Ba. Conference paper at ICLR 2015.
Overview  This method computes individual adaptive learning rates for different parameters from estimates of first and second moments of the gradients. Combines AdaGrad (which works well with sparse gradients) and RMSProp (works well in on-line and non-stationary settings.  </description>
    </item>
    
    <item>
      <title>Introduction to Gaussian Processes (REVIEW)</title>
      <link>https://siobhankcronin.com/posts/intro_to_gaussian_processes/</link>
      <pubDate>Tue, 16 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/posts/intro_to_gaussian_processes/</guid>
      <description>Introduction to Gaussian Processes (1998) - David Mackay
Overview  &amp;ldquo;From a Bayesian perspective, a choice of a neural network model can be viewed as defining a prior probability distribution over non-linear functions, and the neural network&amp;rsquo;s learning process can be interpreted in terms of the posterior probability distribution over the unknown function. (Some learning algorithms search for the function with maximum posterior probability, and other Monte Carlo methods draw samples from this posterior probability).</description>
    </item>
    
    <item>
      <title>Taking the Human out of the Loop - A Review of Bayesian Optimization (REVIEW)</title>
      <link>https://siobhankcronin.com/posts/human_out_of_the_loop/</link>
      <pubDate>Tue, 16 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/posts/human_out_of_the_loop/</guid>
      <description>Taking the Human Out of the Loop: A Review of Bayesian Optimization (2016). Shahriari et al. Proceedings of the IEEE
Introduction  &amp;ldquo;Mathematically we are considering the problem of finding a global maximizer (or minimizer) of an unknown objective function f, where X is some design space of interest; &amp;hellip;&amp;rdquo; &amp;rdquo;&amp;hellip;in global optimization, X is often a compact subset of R^d but the Bayesian optimization framework can be applied to more unusual search spaces that involve categorical or conditional inputs.</description>
    </item>
    
    <item>
      <title>Swarm Intelligence systems for transportation engineering: principles and applications (REVIEW)</title>
      <link>https://siobhankcronin.com/posts/images/swarm_transport/</link>
      <pubDate>Thu, 13 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/posts/images/swarm_transport/</guid>
      <description>Dušan Teodorovic. Swarm Intelligence systems for transportation engineering: principles and applications. Transportation Research, 2008.
This is one of the most comprehensive articles I have found that attempts to connect swarm intelligence heuristics to transportation systems. Most of the article is dedicated to introducing four multi-agent systems that leverage information sharing models to optimize search techniques, and I will recap those here.
Ant Colony Optimization (ACO)
Ants leave pheromone trails, and an ant will use the strength of the signal to weight their choice of path, as well-trod paths traveled by ants heading to a food source have a stronger pheromone signal.</description>
    </item>
    
    <item>
      <title>Learning the Preference of Bounded Agents (REVIEW)</title>
      <link>https://siobhankcronin.com/posts/bounded_agents/</link>
      <pubDate>Fri, 17 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/posts/bounded_agents/</guid>
      <description>This paper applies models of bounded and biased cognition to the creation of a generative model for human choices in decision problems. Perhaps more importantly, the authors attempt to infer preferences (not beliefs) from this model.
They focus their attention on four types of agents:
 Hyperbolic-discounting (i.e. my favorite new way of saying procrastinating) Agents using Monte Carlo approximations of expected utility &amp;ldquo;Myopic&amp;rdquo; agents Bounded value-of-information agents  Choice is made in proportion to a softmax function of expected utility:</description>
    </item>
    
    <item>
      <title>Mathematics - Applications and Applicability (REVIEW)</title>
      <link>https://siobhankcronin.com/posts/mathematics_application_and_applicability/</link>
      <pubDate>Sat, 16 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/posts/mathematics_application_and_applicability/</guid>
      <description>&amp;ldquo;Mathematics - Application and Applicability&amp;rdquo;, by Mark Steiner.
Included in The Nature of Nature: Examining the Role of Naturalism in Science (2011). Edited by Bruce L. Gordon and William A. Dembski. ISI Books: Wilmington, Deleware.
Key ideas Canonical applications (theories developed to describe an application) vs. non-canonical (applying mathematics in situations other than those that created them) Distinguishing applications of mathematics from mathematics itself Exploration of individual thinkers and their attempts to reconcile mathematics and the empirical world (including Gottlob Frege, Hartry Field, Eugene Wigner), with the group-theoretic leading the charge</description>
    </item>
    
    <item>
      <title>What Comes After Minds? (REVIEW)</title>
      <link>https://siobhankcronin.com/posts/what_comes_after_minds/</link>
      <pubDate>Thu, 14 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/posts/what_comes_after_minds/</guid>
      <description>What comes after minds? by Marvin Minsky. From The New Humanists: Science at the Edge (2003). Edited by John Brockman. Barnes &amp;amp; Noble Books: New York.
Key quotes  &amp;ldquo;No uniform scheme will lead to machines as resourceful as the human brain. Instead, I&amp;rsquo;m convinced that this will require many different &amp;lsquo;ways to think&amp;rsquo; - along with bodies of knowledge about how and when to use them&amp;rdquo;. &amp;ldquo;Computer science has helped us envision a far wider range of ways to represent different types and forms of knowledge,&amp;hellip;&amp;rdquo; &amp;ldquo;I see each emotional state as a distinctly different way to think&amp;rdquo;.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://siobhankcronin.com/ai_notes/software_engineering/algorithm_design_manual/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/software_engineering/algorithm_design_manual/</guid>
      <description>Algorithm Design Manual 1. Intro to Algo Design I love the motivation for proof of your algorithm - to confirm that the generalizability of your selected instances (the one&amp;rsquo;s you&amp;rsquo;ve tested) holds.
We then shift into Robot Tour Optimization. Getting to different paths efficiently on the path could be done with a travelling salesman, which requires some stochastic solve. I looked around at how I&amp;rsquo;d love this, and came back to neural combinatorial optimization with RL.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://siobhankcronin.com/ai_notes/swarm_intelligence/prob/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/swarm_intelligence/prob/</guid>
      <description>Prob \begin{align} \dot{x} &amp;amp; = \sigma(y-x) \\
\dot{y} &amp;amp; = \rho x - y - xz \\
\dot{z} &amp;amp; = -\beta z + xy \end{align}
$$\alpha = 1000$$
import matplotlib import numpy as np import matplotlib.pyplot as plt %matplotlib inline  /usr/local/lib/python3.6/site-packages/matplotlib/font_manager.py:278: UserWarning: Matplotlib is building the font cache using fc-list. This may take a moment. &#39;Matplotlib is building the font cache using fc-list. &#39;  x = np.linspace(0, 3*np.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://siobhankcronin.com/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/projects/</guid>
      <description>ML/AI Engineering Landed | Data Engineering Lead | Nov 2018 - Present Insight | Data Engineering Fellowship | Jul-Oct 2018 Uncountable | Software Engineer | Jan-Feb 2018 Avisell | Machine Learning Engineer | May-Sep 2017
Open Source Software Alluvium - Realtime streaming search with Kafka and Apache Storm SwarmOpt — Swarm Intelligence (SI) optimizer for hyperparameter tuning
Service devMission | Youth Mentor | Sep 2018 - Present BAASICS | Advisor | Feb 2014 - Dec 2016 Horizons for Homeless Children | Volunteer Caregiver | 2003 - 2005 Queer Domestic Violence Project | Hotline Volunteer | 2003 - 2005</description>
    </item>
    
    <item>
      <title>A Thousand Plateaus</title>
      <link>https://siobhankcronin.com/ai_notes/books/a_thousand_plateaus/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/books/a_thousand_plateaus/</guid>
      <description>A Thousand Plateaus by Gilles Deleuze &amp;amp; Felix Guattari
&amp;ldquo;The question is not: is it true? But: does it work? What new thoughts does it make possible to think? What new emotion does it make possible to feel? What new sensations and perceptions does it open in the body?&amp;rdquo; Brian Massumi, translator.
There is no way to &amp;ldquo;review&amp;rdquo; this book, any more than there is a way to review the experience of witnessing sunlight over the course of one&amp;rsquo;s life.</description>
    </item>
    
    <item>
      <title>API</title>
      <link>https://siobhankcronin.com/ai_notes/software_engineering/api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/software_engineering/api/</guid>
      <description>Application Program Interfaces (APIs) do a lot of heavy lifting in software engineering, and are a world unto themselves. Let&amp;rsquo;s cover the basics for interacting with an API, and then build out from there.
Designing an endpoint An endpoint is one end of a communication channel. In the case of an API call, the client may request data from a specific endpoint on a server. If we were designing that endpoint, we&amp;rsquo;d want to specify what information is required in that API call to serve the data.</description>
    </item>
    
    <item>
      <title>AWS Virtual Private Clouds (VPCs)</title>
      <link>https://siobhankcronin.com/ai_notes/software_engineering/aws_vpc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/software_engineering/aws_vpc/</guid>
      <description>Overview As J Cole Morrison puts it, we need Virtual Private Clouds (VPCs) because we need control of security, the organization of our resources, traffic between our services, and the ability to keep differing architectures separate.
Some terms we&amp;rsquo;ll need:
 Subnets: Route Tables: Network ACLs: Internet Gateway: NAT Gateway: Variable-length subnet masking (VLSM): Allows you to specify arbitrary-lenght prefixes. Classless Inter-Domain Routing (CIDR) block notation: IP addresses consiste of two groups of bits; the most significant bits are the network prefix (identifies a whole network or subnet) and the least significant set forms the host identifier (specifies a particular interface of a host on that network).</description>
    </item>
    
    <item>
      <title>Active Matter</title>
      <link>https://siobhankcronin.com/ai_notes/swarm_intelligence/active_matter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/swarm_intelligence/active_matter/</guid>
      <description>I first caught wind of Active Matter through the work of one of my favorite researchers, Tamas Vicsek, whose intellectual bling includes a fractal bearing his name.
My understanding of this sprawling sub-domain of physics is that we can study the activity of individuals agents and systems as though studying something like hydrodynamics, kinematics, and non-equilbrium statistical phsyics. Crowds become streams. Flocks become rivers. Networks of agents become oceans.</description>
    </item>
    
    <item>
      <title>Binet&#39;s Formula</title>
      <link>https://siobhankcronin.com/ai_notes/proofs/binets_formula/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/proofs/binets_formula/</guid>
      <description>This proof was shared with me by my friend Chuck Larrieu Casias, and I liked it so much I wanted to write it up here.
Suppose we have two similar rectangles, $A$ and $B$. Let $A$ have sides $a$ and $b$, and $B$ have corresponding sides $b$ and $a+b$.
Then $\frac{b}{a} = \frac{a+b}{b}$. Also, $\frac{b}{a} = \frac{a}{b} + 1$.
Call $\phi = \frac{b}{a}$. Then $\phi = \frac{1}{\phi} + 1$.
Multiply both sides by $\phi$ to get $\phi^2 = \phi + 1$.</description>
    </item>
    
    <item>
      <title>CS75</title>
      <link>https://siobhankcronin.com/ai_notes/lecture_notes/cs75/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/lecture_notes/cs75/</guid>
      <description>Ah, David Malan, we meet again. Many months have passed since I waded through your hyper-caffeinated orations in CS50, and now I find you building dynamic websites in the summer of 2012. I accept your challenge.
9. Scalability Begins with a brief recap on what we look for from a web host, including confirming FSTP (vs. FTP) to ensure security and deciding how fast we think we might scale (so we&amp;rsquo;re not pushed out by other users on a shared system).</description>
    </item>
    
    <item>
      <title>Collections module in Python</title>
      <link>https://siobhankcronin.com/ai_notes/software_engineering/collections/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/software_engineering/collections/</guid>
      <description>Incredibly useful Python container datatypes.
Counter Counter is a dictionary subclass with no restrictions on keys and values.
from collections import Counter words = [&#39;apples&#39;,&#39;oranges&#39;, &#39;apples&#39;, &#39;apples&#39;] words1 = [&#39;oranges&#39;, &#39;oranges&#39;, &#39;oranges&#39;, &#39;apples&#39;]  # Return (element, count) pairs for n most common Counter(words).most_common()  # Subtract elements from another mapping w = Counter(words) w1 = Counter(words1) w.subract(w1) # subtraction, includes zero and negatives w - w1 # subtraction, only positive counts w &amp;amp; w1 # intersection w | w1 # union w + w1 # adds two counters together  # Some useful patterns c.</description>
    </item>
    
    <item>
      <title>Conference on Complex Systems 2016</title>
      <link>https://siobhankcronin.com/ai_notes/lecture_notes/ccs2016/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/lecture_notes/ccs2016/</guid>
      <description>To paraphrase Dr. Rick Sloot&amp;rsquo;s address at the ceremonial opening of University of Amsterdam&amp;rsquo;s Institute for Advanced Systems - if you put together a philosopher and a theoretical physicist together and ask them to &amp;ldquo;make something&amp;rdquo;, they may not know where to begin.
That&amp;rsquo;s where complexity science comes in.
This burgeoning research arena, wearing hand-me-downs from theoretical physics and math (probability, graph theory), has been delightfully uprooting classical theory in economics, neuroscience, and biology (amongst other disciplines) for over a decade, calling all scientists to take a deeper look into how network science might apply to their field.</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>https://siobhankcronin.com/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/contact/</guid>
      <description> Your Name Email Address An email address is required.  Message   </description>
    </item>
    
    <item>
      <title>Correlation</title>
      <link>https://siobhankcronin.com/ai_notes/machine_learning/correlation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/machine_learning/correlation/</guid>
      <description>I hesitated before putting this note on Correlation in my ML section, but then I remembered this comic:
Also, who could forget this chestnut of a motivational lead in to the topic of Maximum Information Coefficient (MIC)?:
I&amp;rsquo;d like to overview Pearson&amp;rsquo;s r, touch upon Kendall and Spearman, and then dive into MIC.
Pearon&amp;rsquo;s r This is what people typically think of when they think of correlation. It measures the linear relationship between two variables.</description>
    </item>
    
    <item>
      <title>Databases</title>
      <link>https://siobhankcronin.com/ai_notes/software_engineering/databases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/software_engineering/databases/</guid>
      <description>I&amp;rsquo;d first like to explore the differences between software in the data ecology, and then dive deeper into key topics affecting their use.
File System (block storage)  HDFS AWS S3 Azure Blob Storage Alluxio Ceph  Key-Value Cache  Apache Ignite: Cache for Cassandra clusters Redis: OSS in-memory data structure storage, used as a database, cache, and message broker. Key-value based database system. Memcached: distributed memory cacheing system. Key-value associative array.</description>
    </item>
    
    <item>
      <title>Deep RL Bootcamp 2017</title>
      <link>https://siobhankcronin.com/ai_notes/lecture_notes/deep_rl_bootcamp_2017/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/lecture_notes/deep_rl_bootcamp_2017/</guid>
      <description>2017 Deep RL Bootcamp Lecture 1: Motivation + Overview + Exact Solution Method VIDEO
(0 - 10) Starts off with a review of MDPs from Barto, and then sets up a simple grid world with an example of a deterministic policy with infinite horizon.
(10-20) OMG, talk gets a bit derailed by series of rando questions that don&amp;rsquo;t seem to be clarifying thinking (answerable by the definition of a deterministic policy).</description>
    </item>
    
    <item>
      <title>Godel, Escher, Bach</title>
      <link>https://siobhankcronin.com/ai_notes/books/geb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/books/geb/</guid>
      <description>Oh my, this book is every bit as delightful as I had imagined it would be.
To be clear, I had slated this book as my &amp;ldquo;summer&amp;rdquo; read, imagining I would have stolen myself to an island somewhere to curl up alongside this book. But life found me in a data engineering fellowship in Palo Alto instead, drinking an endless stream of La Croix (La Croixes?) whilst building streaming pipelines and occassionaly drawing inspiration from the large bronze statue of Nikola Tesla that stood outside the office.</description>
    </item>
    
    <item>
      <title>Hashing</title>
      <link>https://siobhankcronin.com/ai_notes/software_engineering/hashing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/software_engineering/hashing/</guid>
      <description>Hashing Hash functions map sequences of bytes to fixed length sequences. The value returned by a hash function is often called a hash, message digest, hash value, or checksum.
Underlying a hash table is a large array of length $N$, where most of the slots are empty. To resolve collisions (which happen when we go to enter a value at a particular position, and there is already a value there), we can either implement chaining (where we turn each slot into a linked list) or open addressing where we place the value in the next empty slot.</description>
    </item>
    
    <item>
      <title>Intersection of Convex Sets</title>
      <link>https://siobhankcronin.com/ai_notes/proofs/intersection_of_convex_sets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/proofs/intersection_of_convex_sets/</guid>
      <description>Convex sets are interesting in the context of optimization, as they represent regions where we know we can find global minima. A convex region is a region where for every pair of points within the region, every point on the line that joins the points is also within the region.
Fun fact - the intersection of all convex sets containing a given subset A of Euclidean space, is called the convex hull of A, which is the smallest convex set containing A.</description>
    </item>
    
    <item>
      <title>K-nearest neighbors</title>
      <link>https://siobhankcronin.com/ai_notes/software_engineering/k_nearest_neighbors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/software_engineering/k_nearest_neighbors/</guid>
      <description>Sometimes we want to perform an operation on an agent/vector/particle based on what we know about its neibhors. Here are contenders for measuring the nearness of any two points in an n-dimensional real vector space with fixed cartesian coordinates, and strategies for using these distances to calculate neighors:
Distance Euclidean As the name suggests, this is the square root of the sum of squares for each corresponding input pair of our points.</description>
    </item>
    
    <item>
      <title>Kafka &amp; Kinesis</title>
      <link>https://siobhankcronin.com/ai_notes/software_engineering/kafka/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/software_engineering/kafka/</guid>
      <description>In Dunning &amp;amp; Friedman&amp;rsquo;s book Streaming Architecture, they state &amp;ldquo;a big difference between stream-based and traditional design &amp;hellip; is that messaging layer plays a much more prominent role.&amp;rdquo;
I am streaming architecture&amp;rsquo;s biggest fan. So many possibilities open up when you de-couple producers from consumers, and let your messaging layer do the heavy lifting on persisting events. To get at some of the finer points I thought it could be fun to compare the open source project Apache Kafka with AWS&amp;rsquo; pay-to-play Kinesis.</description>
    </item>
    
    <item>
      <title>Linear Algebra Basics</title>
      <link>https://siobhankcronin.com/ai_notes/math/linear_algebra/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/math/linear_algebra/</guid>
      <description>Useful terms and ideas  diagonal matrix: Matrix with zero values except on the diagonal. change of basis matrix: Taking the product of this matrix provides a new basis, which is helpful to us if that basis transformation sets us up for an operation that requires the matrix to be in a particular form. For instance, a change of basis matrix could diagonalize the matrix, such as the choice of the orthogonal matrix as the change of basis matrix in PCA.</description>
    </item>
    
    <item>
      <title>Load Balancing Algorithms</title>
      <link>https://siobhankcronin.com/ai_notes/software_engineering/load_balancer_algorithms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/software_engineering/load_balancer_algorithms/</guid>
      <description>First of all, the load balancer has to keep track of which servers are healthy by routinely pinging them and recording if they respond. If a server fails a health check, it is removed from the viable server list, and will only be added again if it passes a later health check.
Algorithms Least Connection Method LB directs traffic to the server with the fewest active connections
Least Response Time Method LB directs traffic to the server with the fewest active connections and the lowest average response time.</description>
    </item>
    
    <item>
      <title>MLSS Cadiz 2016</title>
      <link>https://siobhankcronin.com/ai_notes/lecture_notes/mlss_cadiz_2016/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/lecture_notes/mlss_cadiz_2016/</guid>
      <description>John Shulman Deep RL I found these talks to be super straightforward and helpful. A breath of fresh air.
Part 1 A brief overview of applications, including robotics, inventory management, resource allocation (queuing), and routing problems (sequential decision making problem).
Differentiating between policy optimization and dynamic programming. In particular, policy optimization including DFO/Evolutionary algorithms (derivative-free) and Policy Gradients (using gradients, improves with more parameters. Dynamic programming requires discrete finite states, and so must be approximated (for instance, approximating function with neural nets).</description>
    </item>
    
    <item>
      <title>Navier-Stokes Existence and Smoothness Problem</title>
      <link>https://siobhankcronin.com/ai_notes/math/navier_stokes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/math/navier_stokes/</guid>
      <description>Let me say up front, I have not solved this problem, nor am I in the running. I came to math late in 2016 after a lifetime of music study, and while I am building a solid trellis upon which to grow my imagination, it will take me many years to capitalize on my potential. That being said, the Millenium Prizes are my one of my favorite sporting events, and the Navier-Stokes Existence and Smoothness Problem is my home team I&amp;rsquo;m rooting for to emerge next.</description>
    </item>
    
    <item>
      <title>Network Geometry</title>
      <link>https://siobhankcronin.com/ai_notes/math/network_geometry/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/math/network_geometry/</guid>
      <description>Network geometry is one of the topics that propelled me towards complexity research and machine learning. If we accept that interactions between agents in a networked system have themselves an impact on the dynamics of a system, it follows that we must investigate the emergence and charactertistics of these interactions. We start to wonder how we might reason about these system &amp;ldquo;overtones&amp;rdquo;.
I find Mulder &amp;amp; Bicaconi&amp;rsquo;s 2018 paper Network Geometry and Complexity to be a nice primer, so I&amp;rsquo;ll start there.</description>
    </item>
    
    <item>
      <title>Network Topology</title>
      <link>https://siobhankcronin.com/ai_notes/swarm_intelligence/network_topology/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/swarm_intelligence/network_topology/</guid>
      <description>What are the advantages of various topogical structures? How can they be combined? Mutate over time? How do swarm systems develop communication topologies?
First, let&amp;rsquo;s get acclimated with the different structures - their definitions and some useful examples of their use in practice.
Ring This is a bus topology in a closed loop, with data traveling around the ring in one direction, passing through each node in turn until it arrives where its going.</description>
    </item>
    
    <item>
      <title>Networking</title>
      <link>https://siobhankcronin.com/ai_notes/software_engineering/networking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/software_engineering/networking/</guid>
      <description>Terms  Connection: Built before data transfer (following protocol) and deconstructed after. Packet: The envelopes that carry your data (in pieces) from one point to the next. Includes header that includes source and destination, timestamps, network hops, plus the main portion which is the data being transfered (also called body, or payload). Network Interface: Software interface to your networking hardware. Local Area Network (LAN): A network or portion of network not publically accessible to the greater internet.</description>
    </item>
    
    <item>
      <title>Outlier Detection</title>
      <link>https://siobhankcronin.com/ai_notes/swarm_intelligence/outlier_detection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/swarm_intelligence/outlier_detection/</guid>
      <description>PSO Approach A paper was brought to my attention today (Particle Swarm Optimization for Outlier Detection) presenting a novel application of PSOs in outlier detection, and I wanted to write about it to see if I can find my way to some context in operations intelligence (i.e. possibly anomaly detection in log files?).
As the authors established the outlier problem, I realized that I carry with me a distance measurement bias when I think about classifying outliers.</description>
    </item>
    
    <item>
      <title>Parrallelogram is convex</title>
      <link>https://siobhankcronin.com/ai_notes/proofs/convex_parrallelogram/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/proofs/convex_parrallelogram/</guid>
      <description>Let $S$ be the parallelogram consisting of all linear combinations of $t_{1}v_{1} + t_{2}v_{2}$ with $0 \leq t_{1} \leq $ and $0 \leq t_{2} \leq $, or equivlently $0 \leq t_{i} \leq $.
We remember that the line segment $PQ$ consists of all points $(1-t)P + tQ$ with $0\leq t \leq 1$, and that $PQ$ exists in vector space $S$ if all points $P, Q$ exist in $S$.
Proof. Let $P=t_{1}v_{1} + t_{2}v_{2}$ and $Q=t_{1}v_{1} + t_{2}v_{2}$ be points in $S$.</description>
    </item>
    
    <item>
      <title>Phenomenology of Perception</title>
      <link>https://siobhankcronin.com/ai_notes/books/phenomenology_of_perception/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/books/phenomenology_of_perception/</guid>
      <description>Phenomenology of Perception by Maurice Merleau-Ponty.
Originally printed in 1945 by Editions Gallimard, with English translation published in 1958 by Routledge &amp;amp; Kegan Paul. I am referencing the 2002 Routledge Classics edition.
Overview There are times in our lives when we notice the apparatus of our perception. Maybe we see a mirage emerge on the horizon, or grow determined to know why our ears are ringing. When we study such visual apparitions and sonic glitches, we align ourselves with generations of philosophers and cognitive scientists who have looked at perception&amp;rsquo;s outliers to help us understand what happens all along without our noticing.</description>
    </item>
    
    <item>
      <title>Principal Component Analysis (PCA)</title>
      <link>https://siobhankcronin.com/ai_notes/math/pca/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/math/pca/</guid>
      <description>Cool Result Considering the decompostions $A = Q^{T}DQ$, where $Q$ is an orthogonal matrix and $D$ is the diagonal matrix of eigenvalues, the columns of $Q$ are the principal components of our matrix!
How does it work? Remember, $Y = XP$, where $P$ is the change of basis matrix.
First we start with the covariance matrix $S_{x} = \frac{1}{m}X^{T}X$, where X is our input matrix. If every feature was necessary, with no redundancy, we&amp;rsquo;d see a diagonal covariance matrix where the only non-zero values would be lined up on the diagonal.</description>
    </item>
    
    <item>
      <title>Processor Scheduling</title>
      <link>https://siobhankcronin.com/ai_notes/software_engineering/processor_scheduling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/software_engineering/processor_scheduling/</guid>
      <description>I&amp;rsquo;m not sure why processor scheduling has so captured my imagination, but I think because it is so central to computing in general. It&amp;rsquo;s about deciding what happens when. It sparks an optimization bubble over my head &amp;mdash; how do we ensure the most efficient scheduling? The strategy a system employs is called a processor scheduling policy, or discipline. This discipline will aim to balance processor utilization, throughput, latency, and ensuring processes complete before their scheduled deadline.</description>
    </item>
    
    <item>
      <title>RL in Process Scheduling</title>
      <link>https://siobhankcronin.com/ai_notes/machine_learning/rl_in_process_scheduling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/machine_learning/rl_in_process_scheduling/</guid>
      <description>When I mentioned my interest in this idea to my partner Carl, he encouraged me to pursue it, but highlighted that it may be at least a masters thesis to secure the necessary OS and RL foundations to implement something that works. I like multi-year challenges, so wanted to at least start scoping the problem to see what is required.
At the onset, I think it would be helpful to identify how processes are currently scheduled (the dominant paradigms), how process scheduling could be framed as a MDP, and how RL could be applied.</description>
    </item>
    
    <item>
      <title>Radicals</title>
      <link>https://siobhankcronin.com/ai_notes/math/radicals/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/math/radicals/</guid>
      <description>OK, so I have just learned about nested radicals, and want to use them as a springboard to meditate on the use of radicals in imagining symmetry in various dimensions. We begin with the infinite nested radicals problem posed by Srivinas Ramanujan.
$? = \sqrt{1 + 2\sqrt{1 + 3\sqrt{1 + \dots}}}$.
His solution involves expressing the geometric series under the radical with the following general formulation
$? = \sqrt{ax + (n + a)^2 + x\sqrt{a(x+n) + (n+a)^2 + (x+n)\sqrt{\dots}}}$.</description>
    </item>
    
    <item>
      <title>Reactive Microservices Architecture</title>
      <link>https://siobhankcronin.com/ai_notes/books/reactive_microservices/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/books/reactive_microservices/</guid>
      <description>When my dog Arlo was a puppy, he went through a period where being on a leash made him anxious, and he would react more agressively to other dogs on the street. My husband and I took him to a class at the local SPCA called &amp;ldquo;Reactive Rover&amp;rdquo; where he learned to chill out whilst walking on leash. In the context of this class, reactive was deemed a negative quality we were learning to un-condition, yet, in service architecture, reactive takes on an entirely different meaning.</description>
    </item>
    
    <item>
      <title>Reinforcement Learning</title>
      <link>https://siobhankcronin.com/ai_notes/books/reinforcement_learning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/books/reinforcement_learning/</guid>
      <description>Reinforcement Learning: An Introduction (1998). Richard Sutton &amp;amp; Andrew Barto. At the onset, I&amp;rsquo;m curious to know how much has changed since this book&amp;rsquo;s publication 20 years ago. That being said, as these are two leaders in the field, I&amp;rsquo;m interested in gaining a sense of their perspective on the history/origin of this subfield, and acclimating to some of the core concepts/constructs. CHAPTER 1 One of the key takeaways from this chapter was the distinction between the value function and rewards function in an RL problem.</description>
    </item>
    
    <item>
      <title>Scaling</title>
      <link>https://siobhankcronin.com/ai_notes/software_engineering/scaling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/software_engineering/scaling/</guid>
      <description>Key ideas  Vertical scaling: Throw more power at the problem (faster processors, more cores, more RAM) Horizontal scaling: Distributed solution. Caching: Session states need to be stored on an external database or an external persisten cache, like Redis. Load balancing: How many load balancers do we need and where should they be positioned in the topoogy? Database replication: How are preparing for system failure? Database partitioning: Can we shunt requests to different branches?</description>
    </item>
    
    <item>
      <title>Space-Time Continuous Models of Swarm Robotic Systems</title>
      <link>https://siobhankcronin.com/ai_notes/books/swarm_robotics_models/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/books/swarm_robotics_models/</guid>
      <description>Space-Time Continuous Models of Swarm Robotic Systems: Supporting Global-to-Local Programming, by Heiko Hamann
Fundamentals of Swarm Robotics Multi-robot systems have the ability to show complex behavior, which is one of the features that motivate my study of them. They also have the potential to solve classic problems in novel, distributed ways. What I&amp;rsquo;m excited about in this book is the presentation of how we derive partial differential equations (Fokker-Planck equation) from a stochastic differential equation (Langevin equation), which forms the basis of the Brownian motion model.</description>
    </item>
    
    <item>
      <title>Square Root of 2 is Irrational</title>
      <link>https://siobhankcronin.com/ai_notes/proofs/proove_sqrt2_is_irrational/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/proofs/proove_sqrt2_is_irrational/</guid>
      <description>Proof. Assume for contradiction that $\sqrt{2}$ is rational.
Therefore, there exists $p, q$ such that $\sqrt{2} = \frac{p}{q}$, where $q \neq 0$, and $p, q$ share no common divisors other than 1.
Squaring both sides gives $2 = \frac{p^2}{q^2}$, so consequently $2q^2 = p^2$.
If a square of a number is even, then the number is even, so there exists some number $k$ such that $p=2k$. Subsituting this value into the equation yields $2q^2 = 4k^2$, or $q^2 = 2k^2$.</description>
    </item>
    
    <item>
      <title>Stream Architecture</title>
      <link>https://siobhankcronin.com/ai_notes/software_engineering/stream_architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/software_engineering/stream_architecture/</guid>
      <description>How can we build a persistent message queue that scales to millions of messages/second?
For example, today&amp;rsquo;s cars are equipped with a data storage device, the EDR (event data recorder), which stores all the sensor data for the vehicle. Such data could be used for routing, dashboard analytics, or mechanical operation (cruise control, lane correction, auto parking, etc). This is just one of many use cases in the IoT universe, all requiring connectivity to control centers and real-time processing of data streams.</description>
    </item>
    
    <item>
      <title>Topological Data Analysis</title>
      <link>https://siobhankcronin.com/ai_notes/math/topology/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/math/topology/</guid>
      <description>I have wanted to study topology for over two years now, and have finally carved out time to begin. I had felt called in this direction for several reasons (ehem, manifolds and network topology), but it wasn&amp;rsquo;t until recently that I found words to articulate why I am eager to get topology in my toolkit.
Essentially, what little I&amp;rsquo;ve already learned of topology is already giving me fresh scaffolding upon which to grow my understanding of the relationships between individuals and groups of all stripes (particles, people, computers, planets).</description>
    </item>
    
    <item>
      <title>Yelp Realtime Streaming Data Infrastructure</title>
      <link>https://siobhankcronin.com/ai_notes/lecture_notes/yelp_realtime_streaming/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/lecture_notes/yelp_realtime_streaming/</guid>
      <description>Fast Order Search Using Yelp&amp;rsquo;s Data Pipeline and Elasticsearch Yelp was experiencing drag on their food order history page due to database lookups. Each lookup required a join across four tables. They found they needed both a relational data store and a key-value store for lantency-sensitive, high-traffic contexts. They also wanted to support full-text search across their data. After weighing their options, they chose Elasticsearch.
Deciding on their schema took some planning, as they wanted to prevent the number of joins of common operations (that was the situation that led to the change in the first place!</description>
    </item>
    
  </channel>
</rss>