<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lecture Notes on Siobhán K Cronin</title>
    <link>https://siobhankcronin.com/ai_notes/lecture_notes/</link>
    <description>Recent content in Lecture Notes on Siobhán K Cronin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://siobhankcronin.com/ai_notes/lecture_notes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CS75</title>
      <link>https://siobhankcronin.com/ai_notes/lecture_notes/cs75/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/lecture_notes/cs75/</guid>
      <description>Ah, David Malan, we meet again. Many months have passed since I waded through your hyper-caffeinated orations in CS50, and now I find you building dynamic websites in the summer of 2012. I accept your challenge.
9. Scalability Begins with a brief recap on what we look for from a web host, including confirming SFTP (vs. FTP) to ensure security and deciding how fast we think we might scale (so we&amp;rsquo;re not pushed out by other users on a shared system).</description>
    </item>
    
    <item>
      <title>Conference on Complex Systems 2016</title>
      <link>https://siobhankcronin.com/ai_notes/lecture_notes/ccs2016/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/lecture_notes/ccs2016/</guid>
      <description>To paraphrase Dr. Rick Sloot&amp;rsquo;s address at the ceremonial opening of University of Amsterdam&amp;rsquo;s Institute for Advanced Systems - if you put together a philosopher and a theoretical physicist together and ask them to &amp;ldquo;make something&amp;rdquo;, they may not know where to begin.
That&amp;rsquo;s where complexity science comes in.
This burgeoning research arena, wearing hand-me-downs from theoretical physics and math (probability, graph theory), has been delightfully uprooting classical theory in economics, neuroscience, and biology (amongst other disciplines) for over a decade, calling all scientists to take a deeper look into how network science might apply to their field.</description>
    </item>
    
    <item>
      <title>Deep RL Bootcamp 2017</title>
      <link>https://siobhankcronin.com/ai_notes/lecture_notes/deep_rl_bootcamp_2017/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/lecture_notes/deep_rl_bootcamp_2017/</guid>
      <description>2017 Deep RL Bootcamp Lecture 1: Motivation + Overview + Exact Solution Method VIDEO
(0 - 10) Starts off with a review of MDPs from Barto, and then sets up a simple grid world with an example of a deterministic policy with infinite horizon.
(10-20) OMG, talk gets a bit derailed by series of rando questions that don&amp;rsquo;t seem to be clarifying thinking (answerable by the definition of a deterministic policy).</description>
    </item>
    
    <item>
      <title>MLSS Cadiz 2016</title>
      <link>https://siobhankcronin.com/ai_notes/lecture_notes/mlss_cadiz_2016/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/lecture_notes/mlss_cadiz_2016/</guid>
      <description>John Shulman Deep RL I found these talks to be super straightforward and helpful. A breath of fresh air.
Part 1 A brief overview of applications, including robotics, inventory management, resource allocation (queuing), and routing problems (sequential decision making problem).
Differentiating between policy optimization and dynamic programming. In particular, policy optimization including DFO/Evolutionary algorithms (derivative-free) and Policy Gradients (using gradients, improves with more parameters. Dynamic programming requires discrete finite states, and so must be approximated (for instance, approximating function with neural nets).</description>
    </item>
    
    <item>
      <title>Yelp Realtime Streaming Data Infrastructure</title>
      <link>https://siobhankcronin.com/ai_notes/lecture_notes/yelp_realtime_streaming/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://siobhankcronin.com/ai_notes/lecture_notes/yelp_realtime_streaming/</guid>
      <description>Fast Order Search Using Yelp&amp;rsquo;s Data Pipeline and Elasticsearch Yelp was experiencing drag on their food order history page due to database lookups. Each lookup required a join across four tables. They found they needed both a relational data store and a key-value store for lantency-sensitive, high-traffic contexts. They also wanted to support full-text search across their data. After weighing their options, they chose Elasticsearch.
Deciding on their schema took some planning, as they wanted to prevent the number of joins of common operations (that was the situation that led to the change in the first place!</description>
    </item>
    
  </channel>
</rss>